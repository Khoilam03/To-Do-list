name: CI/CD for Docker and ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Python setup and testing steps
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'  # Adjust the version as needed

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Python tests
      run: |
        python manage.py test

    # Node.js setup and testing steps
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'  # Adjust the version as needed

    - name: Install Node.js dependencies
      working-directory: ./frontend
      run: |
        npm install

    - name: Build frontend
      working-directory: ./frontend
      run: |
        npm run build  # Ensure this command generates the build output in the expected directory

    - name: Run JavaScript tests
      working-directory: ./frontend
      run: |
        npm test

  push-to-ecr:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: docker-compose build

    - name: Tag and Push Docker image
      run: |
        REPOSITORY_URI=$(aws ecr describe-repositories --repository-names ${{ secrets.ECR_REPOSITORY }} --query 'repositories[0].repositoryUri' --output text)
        docker tag my-image:latest $REPOSITORY_URI:latest
        docker push $REPOSITORY_URI:latest

  deploy-ecs:
    needs: push-to-ecr
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./terraform

    - name: Apply Terraform
      run: terraform apply -auto-approve -var-file="terraform.tfvars"
      working-directory: ./terraform
